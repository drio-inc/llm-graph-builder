services:
  neo4j:
    image: neo4j:latest
    container_name: neo4jdb
    volumes:
        - /$HOME/neo4j/data:/data

    env_file:
      - ./neo4j.env
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: on-failure
    networks:
      - net 

  backend:
    depends_on:
      - neo4j
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/code
    container_name: backend
    environment:
      - NEO4J_URI=neo4j://neo4jdb:7687
      - NEO4J_PASSWORD=password
      - NEO4J_USERNAME=neo4j
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - KNN_MIN_SCORE=0.94
      - IS_EMBEDDING=true
      - UPDATE_GRAPH_CHUNKS_PROCESSED=20
      - NUMBER_OF_CHUNKS_TO_COMBINE=6
      - ENTITY_EMBEDDING=False
      - LLM_MODEL_CONFIG_functionary_small="functionary_small,model_local_url,testing123"
#      - LLM_MODEL_CONFIG_anthropic_claude_35_sonnet=${LLM_MODEL_CONFIG_anthropic_claude_35_sonnet-}
#      - LLM_MODEL_CONFIG_fireworks_llama_v3_70b=${LLM_MODEL_CONFIG_fireworks_llama_v3_70b-}
#      - LLM_MODEL_CONFIG_azure_ai_gpt_4o=${LLM_MODEL_CONFIG_azure_ai_gpt_4o-}
#      - LLM_MODEL_CONFIG_azure_ai_gpt_35=${LLM_MODEL_CONFIG_azure_ai_gpt_35-}
#      - LLM_MODEL_CONFIG_groq_llama3_70b=${LLM_MODEL_CONFIG_groq_llama3_70b-}
#      - LLM_MODEL_CONFIG_bedrock_claude_3_5_sonnet=${LLM_MODEL_CONFIG_bedrock_claude_3_5_sonnet-}
#     - LLM_MODEL_CONFIG_fireworks_qwen_72b=${LLM_MODEL_CONFIG_fireworks_qwen_72b-}
    # env_file:
    #   - ./backend/.env
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "8000:8000"
    networks:
      - net

  frontend:
    depends_on:
      - neo4j
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_API_URL=http://backend:8000
        - VITE_REACT_APP_SOURCES=local,wiki,s3
        - VITE_LLM_MODELS="functionary_small"
        - DEPLOYMENT_ENV=local
    
    volumes:
      - ./frontend:/app
      - /app/node_modules
    # env_file:
    #   - ./frontend/.env
    container_name: frontend
    ports:
      - "8080:8080"
    networks:
      - net

networks:
  net:
